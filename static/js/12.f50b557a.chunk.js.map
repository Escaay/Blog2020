{"version":3,"sources":["pages/message/index.js"],"names":["TextArea","Message","props","React","useState","userName","setUserName","HasLogin","setHasLogin","HasMount","setHasMount","useEffect","handleHasLogin","title","data","console","log","PubSub","subscribe","location","state","username","unsubscribe","messageContent","setMessageContent","text","setText","loveBgc","setloveBgc","updateData","callback","axios","get","then","res","reverse","err","className","rows","onChange","e","target","value","type","onClick","post","qs","stringify","message","alert","LeaveMessage","block","map","item","index","id","twoToneColor","style","backgroundColor","love"],"mappings":"0TAOQA,E,IAAAA,SACO,SAASC,EAAQC,GAAQ,IAAD,EACRC,IAAMC,SAAS,IADP,mBAC9BC,EAD8B,KACrBC,EADqB,OAERH,IAAMC,UAAS,GAFP,mBAE9BG,EAF8B,KAErBC,EAFqB,OAGRL,IAAMC,UAAS,GAHP,mBAG9BK,EAH8B,KAGrBC,EAHqB,KAKnCP,IAAMQ,WAAU,WACZ,IAAMC,EAAe,SAACC,EAAMC,GACxBC,QAAQC,IAAIF,EAAKL,IAEP,IAAPK,GAAcL,GACbD,EAAYM,IAGpBG,IAAOC,UAAU,WAAWN,GARZ,MASQV,EAAMiB,SAASC,OAAO,GAAzCC,EATW,EASXA,SAASd,EATE,EASFA,SAOd,OANKA,GACDC,EAAYD,GAEXc,GACDf,EAAYe,GAET,WAEHJ,IAAOK,YAAYV,GACnBF,GAAY,MAElB,IA1BiC,MA2BMP,IAAMC,SAAS,IA3BrB,mBA2B5BmB,EA3B4B,KA2BbC,EA3Ba,OA4BdrB,IAAMC,SAAS,IA5BD,mBA4B5BqB,EA5B4B,KA4BvBC,EA5BuB,OA6BRvB,IAAMC,SAAS,IA7BP,mBA6B5BuB,EA7B4B,KA6BpBC,EA7BoB,KA8B7BC,EAAW,SAACC,GACdC,IAAMC,IAAI,qCAAqCC,MAAK,SAAAC,GAChDV,EAAkBU,EAAIpB,KAAKqB,WAC3BL,OAEJ,SAAAM,GACIrB,QAAQC,IAAI,gCAoDpB,OATAb,IAAMQ,WAAU,WACZoB,IAAMC,IAAI,qCAAqCC,MAAK,SAAAC,GAChDV,EAAkBU,EAAIpB,KAAKqB,cAE/B,SAAAC,GACIrB,QAAQC,IAAI,6CAAUoB,QAG5B,IAEE,sBAAKC,UAAU,UAAf,UACI,sBAAMA,UAAU,gBAAhB,UACF,cAACrC,EAAD,CAAUsC,KAAM,EAAIC,SAnDT,SAACC,GACdd,EAAQc,EAAEC,OAAOC,QAkD2BA,MAAOjB,IACjD,mBAAQkB,KAAK,UAAUC,QAAS,YAjDnB,SAACnB,GACZlB,EAIM,KAAPkB,EACCM,IAAMc,KAAK,oCAAoCC,IAAGC,UAAU,CAAC1B,SAAShB,EAAS2C,QAAQvB,KAAQQ,MAAK,WAChGgB,MAAM,4BACNpB,GAAW,WAAKH,EAAQ,UAE5B,SAAAU,GACIa,MAAM,+BAIVA,MAAM,wCAbNA,MAAM,4BA+C6BC,CAAazB,IAAQY,UAAU,aAAac,OAAK,EAAtF,yCAKA,uBACA,uBACA,6BAEI5B,EAAe6B,KAAI,SAACC,EAAKC,GACrB,OACA,6BACd,sBAAKjB,UAAU,kBAAf,UACA,sBAAKA,UAAU,uBAAf,UAAuCgB,EAAKhC,SAA5C,YACD,qBAAKgB,UAAU,uBAAf,SAAuCgB,EAAKL,UAC5C,sBAAKX,UAAU,eAAf,UAA8B,sBAAMO,QAAS,WA9C5B,IAACW,IA8C0CF,EAAKE,GA7C/C,KAAV5B,GACCC,EAAW,OACXG,IAAMC,IAAN,mDAAsDuB,EAAtD,sBAA6EtB,MAAK,WAC9EJ,GAAW,kBACb,SAAAO,GACEa,MAAM,iCAGVrB,EAAW,IACXG,IAAMC,IAAN,mDAAsDuB,EAAtD,sBAA6EtB,MAAK,SAAAC,GAC9EL,GAAW,kBACb,SAAAO,GACEa,MAAM,6CAiCW,SAAyC,cAAC,IAAD,CAAcO,aAAa,UAAUC,MAAO,CAACC,gBAAgB/B,OAApI,IAAwJ0B,EAAKM,YAJrIL","file":"static/js/12.f50b557a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.css'\r\nimport { Input,Button } from 'antd';\r\nimport axios from 'axios'\r\nimport {HeartTwoTone} from '@ant-design/icons';\r\nimport qs from 'querystring'\r\nimport PubSub from 'pubsub-js'\r\nconst { TextArea } = Input;\r\nexport default function Message(props) {\r\n    let [userName,setUserName]=React.useState('')\r\n    let [HasLogin,setHasLogin]=React.useState(false)\r\n    let [HasMount,setHasMount]=React.useState(true)\r\n    // 判断组件是否挂载\r\n    React.useEffect(()=>{\r\n        const handleHasLogin=(title,data)=>{\r\n            console.log(data,HasMount);\r\n            //如果在留言板页面退出登录，直接改变状态即可\r\n            if(data===false&&HasMount){\r\n                setHasLogin(data)\r\n            }\r\n        }\r\n        PubSub.subscribe('HasLogin',handleHasLogin)\r\n        let {username,HasLogin}=props.location.state||{}\r\n        if(!!HasLogin){\r\n            setHasLogin(HasLogin)\r\n        }\r\n        if(!!username){\r\n            setUserName(username)\r\n        }\r\n        return ()=>{\r\n            // 取消订阅，减少消耗\r\n            PubSub.unsubscribe(handleHasLogin)\r\n            setHasMount(false)\r\n        }\r\n    },[])\r\n    const [messageContent,setMessageContent]=React.useState([])\r\n    const [text,setText]=React.useState('')\r\n    const [loveBgc,setloveBgc]=React.useState('')\r\n    const updateData=(callback)=>{\r\n        axios.get('http://aays.top:4000/board/search').then(res=>{\r\n            setMessageContent(res.data.reverse())\r\n            callback()\r\n        },\r\n        err=>{\r\n            console.log('查询失败');\r\n        }\r\n        )\r\n    }\r\n    const textChange=(e)=>{\r\n        setText(e.target.value)\r\n    }\r\n    const LeaveMessage=(text)=>{\r\n        if(!HasLogin){\r\n            alert('请先登录')\r\n            return \r\n        }\r\n        if(text!==''){\r\n            axios.post('http://aays.top:4000/board/insert',qs.stringify({username:userName,message:text})).then(()=>{\r\n                alert('留言成功')\r\n                updateData(()=>{setText('')})\r\n            },\r\n            err=>{\r\n                alert('留言失败')\r\n            }\r\n            ) \r\n        }else{\r\n            alert('输入不能为空')\r\n        }\r\n    }\r\n    const Clicklove=(id)=>{\r\n        if(loveBgc===''){\r\n            setloveBgc('red')\r\n            axios.get(`http://aays.top:4000/board/updatelove?id=${id}&option=increment`).then(()=>{\r\n                updateData(()=>{})\r\n            },err=>{\r\n                alert('点赞失败');\r\n            })\r\n        }else{\r\n            setloveBgc('')\r\n            axios.get(`http://aays.top:4000/board/updatelove?id=${id}&option=decrement`).then(res=>{\r\n                updateData(()=>{})\r\n            },err=>{\r\n                alert('取消点赞失败')\r\n            })\r\n        }\r\n    }\r\n   \r\n    React.useEffect(()=>{\r\n        axios.get('http://aays.top:4000/board/search').then(res=>{\r\n            setMessageContent(res.data.reverse())\r\n        },\r\n        err=>{\r\n            console.log('请求数据库失败',err);\r\n        }\r\n        )\r\n    },[])\r\n    return (\r\n        <div className='message'>\r\n            <div  className='message-input'>\r\n          <TextArea rows={5}  onChange={textChange} value={text}/>\r\n          <Button type=\"primary\" onClick={()=>{LeaveMessage(text)}} className='search-btn' block>\r\n      发表留言\r\n    </Button>\r\n          </div>\r\n    \r\n          <br />\r\n          <br />\r\n          <ul>\r\n          {\r\n              messageContent.map((item,index)=>{\r\n                  return (\r\n                  <li key={index}>\r\n    <div className='message-content'>\r\n    <div className='message-content-user'>{item.username}：</div>\r\n   <div className='message-content-text'>{item.message}</div>\r\n   <div className='message-love'><span onClick={()=>{Clicklove(item.id)}}><HeartTwoTone twoToneColor=\"#eb2f96\" style={{backgroundColor:loveBgc}}/></span> {item.love}</div>\r\n</div>\r\n                  </li>\r\n                  )\r\n              })\r\n          }\r\n      </ul>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}